<div id="Outputs" data-tchmi-type="TcHmi.Controls.System.TcHmiUserControl" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width="100" data-tchmi-height="100" data-tchmi-width-unit="%" data-tchmi-height-unit="%" data-tchmi-creator-viewport-width="500" data-tchmi-creator-viewport-height="500">

<div id="TcHmiTextblock_76" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="10" data-tchmi-height-unit="%" data-tchmi-left="0.0" data-tchmi-left-unit="%" data-tchmi-text="OUTPUTS" data-tchmi-top="0" data-tchmi-top-unit="%" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-text-horizontal-alignment="Center" data-tchmi-text-vertical-alignment="Center" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%" data-tchmi-text-font-weight="Bold" data-tchmi-width="100">


<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 3,
  "right": 3,
  "top": 3,
  "bottom": 3,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "Solid",
  "bottom": "Solid"
}
</script>
</div>

<div id="TcHmiGrid_1" data-tchmi-type="TcHmi.Controls.System.TcHmiGrid" data-tchmi-height="90" data-tchmi-height-unit="%" data-tchmi-left="0.0" data-tchmi-left-unit="%" data-tchmi-top="10.0" data-tchmi-top-unit="%" data-tchmi-width="100" data-tchmi-width-unit="%">
<script data-tchmi-target-attribute="data-tchmi-column-options" type="application/json">
[
  {
    "width": 1.0,
    "widthUnit": "factor",
    "widthMode": "Value",
    "maxWidth": null,
    "maxWidthUnit": "px",
    "minWidth": null,
    "minWidthUnit": "px",
    "overflow": false
  },
  {
    "width": 1.0,
    "widthUnit": "factor",
    "widthMode": "Value",
    "maxWidth": null,
    "maxWidthUnit": "px",
    "minWidth": null,
    "minWidthUnit": "px",
    "overflow": false
  }
]
</script>
<script data-tchmi-target-attribute="data-tchmi-row-options" type="application/json">
[
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeight": null,
    "maxHeightUnit": "px",
    "minHeight": null,
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeight": null,
    "maxHeightUnit": "px",
    "minHeight": null,
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeight": null,
    "maxHeightUnit": "px",
    "minHeight": null,
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeight": null,
    "maxHeightUnit": "px",
    "minHeight": null,
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeight": null,
    "maxHeightUnit": "px",
    "minHeight": null,
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeight": null,
    "maxHeightUnit": "px",
    "minHeight": null,
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeight": null,
    "maxHeightUnit": "px",
    "minHeight": null,
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeight": null,
    "maxHeightUnit": "px",
    "minHeight": null,
    "minHeightUnit": "px",
    "overflow": false
  },
  {
    "height": 1.0,
    "heightUnit": "factor",
    "heightMode": "Value",
    "maxHeight": null,
    "maxHeightUnit": "px",
    "minHeight": null,
    "minHeightUnit": "px",
    "overflow": false
  }
]
</script>

<div id="OutputButton1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output1Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output1%/pp%" data-tchmi-text-font-size-unit="%" data-tchmi-text-font-size="250" data-tchmi-text-font-weight="Bold">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output1%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output1%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton1::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton1::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="1" data-tchmi-grid-column-index="0" id="OutputButton2" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output2Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output2%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-is-enabled="True" data-tchmi-text-font-size-unit="%" data-tchmi-text-font-size="250">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output2%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output2%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton2::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton2::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="2" data-tchmi-grid-column-index="0" id="OutputButton3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output3Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output3%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output3%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output3%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton3::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton3::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="3" data-tchmi-grid-column-index="0" id="OutputButton4" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output4Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output4%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output4%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output4%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton4::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton4::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="4" data-tchmi-grid-column-index="0" id="OutputButton5" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output5Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output5%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output5%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output5%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton5::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton5::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="5" data-tchmi-grid-column-index="0" id="OutputButton6" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output6Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output6%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output6%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output6%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton6::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton6::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="6" data-tchmi-grid-column-index="0" id="OutputButton7" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output7Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output7%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output7%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output7%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton7::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton7::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="7" data-tchmi-grid-column-index="0" id="OutputButton8" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output8Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output8%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output8%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output8%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton8::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton8::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="0" data-tchmi-grid-column-index="1" id="OutputButton9" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output9Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output9%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output9%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output9%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton9::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton9::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="1" data-tchmi-grid-column-index="1" id="OutputButton10" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output10Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output10%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output10%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output10%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton10::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton10::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="2" data-tchmi-grid-column-index="1" id="OutputButton11" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output11Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output11%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output11%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output11%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton11::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton11::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="3" data-tchmi-grid-column-index="1" id="OutputButton12" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output12Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output12%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output12%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output12%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton12::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton12::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="4" data-tchmi-grid-column-index="1" id="OutputButton13" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output13Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output13%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output13%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output13%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton13::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton13::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="5" data-tchmi-grid-column-index="1" id="OutputButton14" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output14Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output14%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output14%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output14%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton14::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton14::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="6" data-tchmi-grid-column-index="1" id="OutputButton15" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output15Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output15%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output15%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output15%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton15::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton15::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="7" data-tchmi-grid-column-index="1" id="OutputButton16" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output16Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output16%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output16%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output16%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton16::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton16::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="8" data-tchmi-grid-column-index="0" id="OutputButton17" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="-3" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output17Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output17%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output17%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output17%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton17::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton17::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

<div data-tchmi-grid-row-index="8" data-tchmi-grid-column-index="1" id="OutputButton16_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="100" data-tchmi-height-unit="%" data-tchmi-left="0" data-tchmi-left-unit="px" data-tchmi-text="%pp%Output16Text%/pp%" data-tchmi-top="0" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="%" data-tchmi-word-wrap="True" data-tchmi-state-symbol="%pp%Output16%/pp%" data-tchmi-text-font-weight="Bold" data-tchmi-text-font-size="250" data-tchmi-text-font-size-unit="%">


<script data-tchmi-target-attribute="data-tchmi-text-color" type="application/json">
{
  "color": "rgba(0, 0, 0, 1)"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">[
  {
    "event": "%pp%Output18%/pp%",
    "actions": [
      {
        "objectType": "Condition",
        "active": true,
        "asyncWait": true,
        "parts": [
          {
            "if": [
              {
                "compare1": {
                  "objectType": "Symbol",
                  "symbolExpression": "%pp%Output18%/pp%"
                },
                "compare2": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:general#/definitions/BOOL",
                  "value": true
                },
                "compareOperator": "==",
                "logic": null
              }
            ],
            "then": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton16_1::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/Color",
                  "value": {
                    "color": "rgba(0, 255, 0, 1)"
                  }
                },
                "asyncWait": true
              }
            ]
          },
          {
            "else": [
              {
                "objectType": "WriteToSymbol",
                "active": true,
                "symbolExpression": "%ctrl%OutputButton16_1::BackgroundColor%/ctrl%",
                "valueType": "tchmi:framework#/definitions/Color",
                "value": {
                  "objectType": "StaticValue",
                  "valueType": "tchmi:framework#/definitions/SolidColor",
                  "value": null
                },
                "asyncWait": true
              }
            ]
          }
        ]
      }
    ]
  }
]</script>
</div>

</div>


<script data-tchmi-target-attribute="data-tchmi-border-width" type="application/json">
{
  "left": 3,
  "right": 3,
  "top": 3,
  "bottom": 3,
  "leftUnit": "px",
  "rightUnit": "px",
  "topUnit": "px",
  "bottomUnit": "px"
}
</script>

<script data-tchmi-target-attribute="data-tchmi-border-style" type="application/json">
{
  "left": "Solid",
  "right": "Solid",
  "top": "Solid",
  "bottom": "Solid"
}
</script>
</div>